version: 2.1

executors:
  amd64: # Docker using the Base Convenience Image
    docker:
      - image: docker
    environment:
      PLATFORM: "linux/amd64"
      EXECUTOR: "amd64"
  arm64: # a Linux VM running Ubuntu 20.04
    docker:
      - image: docker
    resource_class: arm.medium
    environment:
      PLATFORM: "linux/arm64"
      EXECUTOR: "arm64"

commands:
  configure-ghcr:
    description: Configure GHCR access
    steps:
      - run:
          name: Configure GHCR
          command: |
            [ -z "$GHCR_TOKEN" ] && exit 0
            [ -z "$GHCR_USER" ] && exit 0
            echo $GHCR_TOKEN | docker login ghcr.io -u $GHCR_USER --password-stdin
  compute-build-tag:
    description: Compute the build tag from the branch
    steps:
      - run:
          name: Compute the build tag from the branch
          command: |
            echo "The branch is ${CIRCLE_BRANCH}"
            RELEASE_REGEX="^release\/.*"

            BUILD_TAG="unpushed"
            if [[ ${CIRCLE_BRANCH} =~ ${RELEASE_REGEX} ]]; then
              BUILD_TAG=${CIRCLE_BRANCH//release\//}
            elif [ ${CIRCLE_BRANCH} == "main" ]; then
              BUILD_TAG="latest"
            fi

            if [ "${BUILD_TAG}" == "unpushed" ]; then
              echo "Building feature or bugfix branch. Docker containers will not be pushed."
            else
              echo "The build tag is ${BUILD_TAG}"
            fi

            echo "export BUILD_TAG=${BUILD_TAG}" >> $BASH_ENV
            source $BASH_ENV
jobs:
    build:
      parameters:
        platform:
          type: executor
        target:
          type: string
      executor: << parameters.platform >>
      steps:
        - checkout
        - configure-ghcr
        - setup_remote_docker
        - run:
            name: Build
            command: |              
              docker buildx bake --set _platforms.platform=${PLATFORM} << parameters.target >>
    push:
      parameters:
        platform:
          type: executor
        target:
          type: string
      executor: << parameters.platform >>
      steps:
        - checkout
        - configure-ghcr
        - compute-build-tag
        - setup_remote_docker
        - run: mkdir -p /tmp/workspace
        - run:
            name: Push
            command: |              
              TAG=${BUILD_TAG}-${CIRCLE_TAG:-latest} 
              docker buildx bake --set _platforms.platform=${PLATFORM} << parameters.target >> --push
              export IMAGE=$(docker images | awk '{print $1}' | awk 'NR==2')
              echo "export PUSHED_IMAGES=\"${PUSHED_IMAGES} ${IMAGE}:${TAG}\"" >> /tmp/workspace/<< parameters.target >>_${EXECUTOR}.env
        - persist_to_workspace:
            root: /tmp/workspace
            paths:
              - << parameters.target >>_${EXECUTOR}.env
    link:
      docker:
        - image: docker
      steps:
        - checkout
        - configure-ghcr
        - attach_workspace:
            at: /tmp/workspace
        - run:
            name: Link
            command: |
              echo "Linking images"
              source *.env
              for image in ${PUSHED_IMAGES}; do
                echo "Linking ${image}"
              done

workflows:
  build-all:
    jobs:
      - build:
          context: ghcr-token
          matrix:
            parameters:
              platform: [amd64, arm64]
              target: [proxy]
      - push:
          context: ghcr-token
          requires:
            - build
          matrix:
            parameters:
              platform: [amd64, arm64]
              target: [proxy]
      - link:
          context: ghcr-token
          requires:
            - push




